<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>$schema</key>
    <string>https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json</string>
    <key>name</key>
    <string>zs</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#comment</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#function-definition</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#class-definition</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#typeclass-definition</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#statement</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>punctuation-comma</key>
      <dict>
        <key>name</key>
        <string>punctuation.separator.comma.zs</string>
        <key>match</key>
        <string>,</string>
      </dict>
      <key>punctuation-colon</key>
      <dict>
        <key>name</key>
        <string>punctuation.separator.colon.zs</string>
        <key>match</key>
        <string>:(?:[\s]|$)</string>
      </dict>
      <key>definition</key>
      <dict>
        <key>name</key>
        <string>meta.definition.zs</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-definition</string>
          </dict>
        </array>
      </dict>
      <key>expression</key>
      <dict>
        <key>name</key>
        <string>meta.expression.zs</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#inspect</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#as</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#is</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#unnamed-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literals</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operators</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function-call</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable-definition-typed</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable-definition-auto</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable-name</string>
          </dict>
        </array>
      </dict>
      <key>return-statement</key>
      <dict>
        <key>name</key>
        <string>meta.return-statement.zs</string>
        <key>begin</key>
        <string>\b(return)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.return.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(;)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.terminator.statement.zs</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>statement</key>
      <dict>
        <key>name</key>
        <string>meta.statement.zs</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#import</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#star-import</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#return-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#if</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#else</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#while</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>import</key>
      <dict>
        <key>name</key>
        <string>meta.import.zs</string>
        <key>begin</key>
        <string>\b(import)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.import.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=;)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.terminator.statement.zs</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#names-in-curly-brackets</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#import-from</string>
          </dict>
        </array>
      </dict>
      <key>import-from</key>
      <dict>
        <key>name</key>
        <string>meta.import-from.zs</string>
        <key>begin</key>
        <string>\b(from)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.import-from.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=;)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.terminator.statement.zs</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable-name</string>
          </dict>
        </array>
      </dict>
      <key>star-import</key>
      <dict>
        <key>name</key>
        <string>meta.import.zs</string>
        <key>begin</key>
        <string>(?x)
\b(import)\b\s*
(\*)\s*
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.import.zs</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.wildcard.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=;)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.terminator.statement.zs</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#import-from</string>
          </dict>
        </array>
      </dict>
      <key>names-in-curly-brackets</key>
      <dict>
        <key>name</key>
        <string>meta.names-in-curly-brackets.zs</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.begin.bracket.curly.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.end.bracket.curly.zs</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#import-name</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>import-name-identifier</key>
      <dict>
        <key>match</key>
        <string>(?x)
([_[:alpha:]][_[:alnum:]]*)
</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.variable.import.zs</string>
          </dict>
        </dict>
      </dict>
      <key>import-name</key>
      <dict>
        <key>name</key>
        <string>meta.import-name.zs</string>
        <key>begin</key>
        <string>(?x)
([_[:alpha:]][_[:alnum:]]*)\s*
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#import-name-identifier</string>
              </dict>
            </array>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=[\}\,])</string>
      </dict>
      <key>namespace-access</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(?:([_[:alpha:]][_[:alnum:]]*)(::))</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.namespace.zs</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.static-accessor.zs</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=[_[:alpha:]][_[:alnum:]]*[^\w:])</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#namespace-access</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>variable-name</key>
      <dict>
        <key>name</key>
        <string>meta.definition.variable.zs</string>
        <key>match</key>
        <string>((?:[_[:alpha:]][_[:alnum:]]*::)*)([_[:alpha:]][_[:alnum:]]*)</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#namespace-access</string>
              </dict>
            </array>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.variable.zs</string>
          </dict>
        </dict>
      </dict>
      <key>variable-definition-typed</key>
      <dict>
        <key>name</key>
        <string>meta.definition.variable.zs</string>
        <key>begin</key>
        <string>(?x)
((?:[_[:alpha:]][_[:alnum:]]*::)*)([_[:alpha:]][_[:alnum:]]*)\s*
(?=:(?:[\s]|$))
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#namespace-access</string>
              </dict>
            </array>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.variable.declaration.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=;)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#typing</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#assignment</string>
          </dict>
        </array>
      </dict>
      <key>variable-definition-auto</key>
      <dict>
        <key>name</key>
        <string>meta.definition.variable.zs</string>
        <key>begin</key>
        <string>(?x)
(var|let)\s*
([_[:alpha:]][_[:alnum:]]*)\s*
(?=[=])
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.type.variable.zs</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.variable.declaration.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=;)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#assignment</string>
          </dict>
        </array>
      </dict>
      <key>assignment</key>
      <dict>
        <key>name</key>
        <string>meta.assignment.zs</string>
        <key>begin</key>
        <string>(?x)
(=)\s*
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=;)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.terminator.statement.zs</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>class-definition</key>
      <dict>
        <key>name</key>
        <string>meta.definition.class.zs</string>
        <key>begin</key>
        <string>(?x)
(class)\s+
([_[:alpha:]][_[:alnum:]]*)
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.class.zs</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.declaration.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=[\}])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#scoped-code-block</string>
          </dict>
        </array>
      </dict>
      <key>typeclass-definition</key>
      <dict>
        <key>name</key>
        <string>meta.definition.typeclass.zs</string>
        <key>begin</key>
        <string>(?x)
(typeclass)\s+
([_[:alpha:]][_[:alnum:]]*)
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.class.zs</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.declaration.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=[\}])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#parenthesized-type-parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#scoped-code-block</string>
          </dict>
        </array>
      </dict>
      <key>function-definition</key>
      <dict>
        <key>name</key>
        <string>meta.definition.function.zs</string>
        <key>begin</key>
        <string>(?x)
(fun)\s+
([_[:alpha:]][_[:alnum:]]*)
# (?=\s*[\(])
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.function.zs</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.declaration.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=[\};])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#parenthesized-parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#scoped-code-block</string>
          </dict>
        </array>
      </dict>
      <key>unnamed-function</key>
      <dict>
        <key>name</key>
        <string>meta.definition.unnamed-function.zs</string>
        <key>begin</key>
        <string>(:)(?=[\s\(])</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.separator.colon.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=[\};])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-type</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#scoped-code-block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>scoped-code-block</key>
      <dict>
        <key>begin</key>
        <string>(\{)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.open.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\})</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.curlybrace.close.zs</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#code-block-content</string>
          </dict>
        </array>
      </dict>
      <key>code-block-content</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#class-definition</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function-definition</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#scoped-code-block</string>
          </dict>
        </array>
      </dict>
      <key>binary-operator</key>
      <dict>
        <key>name</key>
        <string>keyword.operator.zs</string>
        <key>match</key>
        <string>(?x)
(
  = | := |
  \+ | - | \* | / | % | 
  \+= | -= | \*= | /= | %= |
  &lt;&lt; | &gt;&gt; | &amp; | \| | \^ | 
  &lt;&lt;= | &gt;&gt;= | &amp;= | \|= | \^= |
  &amp;&amp; | \|\| |
  &amp;&amp;= | \|\|= |
  == | != | &lt; | &gt; | &lt;= | &gt;= | &lt;=&gt; 
)
</string>
      </dict>
      <key>unary-operator</key>
      <dict>
        <key>name</key>
        <string>keyword.operator.zs</string>
        <key>match</key>
        <string>(?x)
(?&lt;=((?:[_[:alpha:]][_[:alnum:]]*::)*)([_[:alpha:]][_[:alnum:]]*))
(
  \+\+ | -- |
  &amp;    | \$ |
  \.
)
</string>
      </dict>
      <key>square-brackets-operator</key>
      <dict>
        <key>name</key>
        <string>keyword.operator.square-brackets.zs</string>
        <key>begin</key>
        <string>(\[)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.squarebracket.open.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\])</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.squarebracket.close.zs</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>operators</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#binary-operator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#unary-operator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#square-brackets-operator</string>
          </dict>
        </array>
      </dict>
      <key>if</key>
      <dict>
        <key>name</key>
        <string>meta.control.if.zs</string>
        <key>begin</key>
        <string>\b(if)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.if.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=[\{])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>else</key>
      <dict>
        <key>name</key>
        <string>meta.control.else.zs</string>
        <key>begin</key>
        <string>\b(else)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.else.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=[\{])</string>
      </dict>
      <key>while</key>
      <dict>
        <key>name</key>
        <string>meta.control.while.zs</string>
        <key>begin</key>
        <string>\b(while)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.while.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=[\{;]|next)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>for</key>
      <dict>
        <key>name</key>
        <string>meta.control.for.zs</string>
        <key>begin</key>
        <string>\b(for)\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.control.for.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=[\}])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\b(do)\b</string>
            <key>name</key>
            <string>keyword.control.do.zs</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#unnamed-function</string>
          </dict>
        </array>
      </dict>
      <key>function-typing</key>
      <dict>
        <key>name</key>
        <string>meta.typing.zs</string>
        <key>begin</key>
        <string>(:)(?=[\s\(])</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.separator.colon.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=\s*(?=[=;]))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-type</string>
          </dict>
        </array>
      </dict>
      <key>type</key>
      <dict>
        <key>name</key>
        <string>meta.type.zs</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-type</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-template-instance</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-name</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#pointer-type</string>
          </dict>
        </array>
      </dict>
      <key>typing</key>
      <dict>
        <key>name</key>
        <string>meta.typing.zs</string>
        <key>begin</key>
        <string>(:)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.separator.colon.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=\s*(?=[=;]))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#type</string>
          </dict>
        </array>
      </dict>
      <key>type-name</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>([_[:alpha:]][_[:alnum:]]*)\s*(::)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.namespace.zs</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.static-accessor.zs</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(::)\s*([_[:alpha:]][_[:alnum:]]*)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.static-accessor.zs</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.zs</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>entity.name.type.zs</string>
            <key>match</key>
            <string>[_[:alpha:]][_[:alnum:]]*</string>
          </dict>
        </array>
      </dict>
      <key>type-template-instance</key>
      <dict>
        <key>name</key>
        <string>meta.type.template-instance.zs</string>
        <key>begin</key>
        <string>(?x)
((?:[_[:alpha:]][_[:alnum:]]*::)*)([_[:alpha:]][_[:alnum:]]*)\s*
(&lt;)
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#namespace-access</string>
              </dict>
            </array>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.zs</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>punctuation.template.begin.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(&gt;)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.template.end.zs</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#type</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comma</string>
          </dict>
        </array>
      </dict>
      <key>function-return-type-separator</key>
      <dict>
        <key>name</key>
        <string>punctuation.separator.function-return-type.zs</string>
        <key>match</key>
        <string>-&gt;</string>
      </dict>
      <key>function-type</key>
      <dict>
        <key>name</key>
        <string>meta.function-type.zs</string>
        <key>begin</key>
        <string>(?x)
(?=\()
</string>
        <key>end</key>
        <string>(?=[=;])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#parenthesized-parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function-return-type-separator</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type</string>
          </dict>
        </array>
      </dict>
      <key>parameter-modifier</key>
      <dict>
        <key>name</key>
        <string>storage.modifier.zs</string>
        <key>match</key>
        <string>\b(in|out|inout|copy|move|forward)\b</string>
      </dict>
      <key>parameter-name</key>
      <dict>
        <key>match</key>
        <string>(?x)
([_[:alpha:]][_[:alnum:]]*)
</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>entity.name.variable.parameter.zs</string>
          </dict>
        </dict>
      </dict>
      <key>parameter</key>
      <dict>
        <key>name</key>
        <string>meta.parameter.zs</string>
        <key>begin</key>
        <string>(?x)
(?:(\w+)?\s+)?
([_[:alpha:]][_[:alnum:]]*)\s*
(:)\s*
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#parameter-modifier</string>
              </dict>
            </array>
          </dict>
          <key>2</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#parameter-name</string>
              </dict>
            </array>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>punctuation.separator.colon.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=[\)\,])</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#type-name</string>
          </dict>
        </array>
      </dict>
      <key>untyped-parameter</key>
      <dict>
        <key>name</key>
        <string>meta.parameter.zs</string>
        <key>begin</key>
        <string>(?x)
([_[:alpha:]][_[:alnum:]]*)\s*
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#parameter-name</string>
              </dict>
            </array>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=[\)\,])</string>
      </dict>
      <key>parenthesized-parameters</key>
      <dict>
        <key>name</key>
        <string>meta.function.parameters.zs</string>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.parameters.begin.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.parameters.end.zs</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parameter</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#untyped-parameter</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>parenthesized-type-parameters</key>
      <dict>
        <key>name</key>
        <string>meta.function.type-parameters.zs</string>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.type-parameters.begin.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.type-parameters.end.zs</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-name</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>comment</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.block.zs</string>
            <key>begin</key>
            <string>/\*</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.zs</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\*/</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.zs</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>begin</key>
            <string>(^\s+)?(?=//)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.whitespace.comment.leading.zs</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=$)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>comment.block.documentation.zs</string>
                <key>begin</key>
                <string>(?&lt;!/)///(?!/)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.zs</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=$)</string>
              </dict>
              <dict>
                <key>name</key>
                <string>comment.line.double-slash.zs</string>
                <key>begin</key>
                <string>(?&lt;!/)//(?:(?!/)|(?=//))</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.comment.zs</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=$)</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>function-call</key>
      <dict>
        <key>name</key>
        <string>meta.function-call.zs</string>
        <key>begin</key>
        <string>(?x)
((?:[_[:alpha:]][_[:alnum:]]*::)*)([_[:alpha:]][_[:alnum:]]*)\s*
(?=\()
</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#namespace-access</string>
              </dict>
            </array>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>entity.name.function.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\))</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-arguments</string>
          </dict>
        </array>
      </dict>
      <key>function-name</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?x)
  \b ([_[:alpha:]][_[:alnum:]]*) \b
</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.zs</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>function-arguments</key>
      <dict>
        <key>name</key>
        <string>meta.function.arguments.zs</string>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.arguments.begin.zs</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.arguments.end.zs</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>boolean</key>
      <dict>
        <key>name</key>
        <string>constant.language.boolean.zs</string>
        <key>match</key>
        <string>\b(true|false)\b</string>
      </dict>
      <key>numeric</key>
      <dict>
        <key>comment</key>
        <string>TODO taken from C# as is. Need to modify.</string>
        <key>match</key>
        <string>(?&lt;!\w)\.?\d(?:(?:[0-9a-zA-Z_\.]|_)|(?&lt;=[eE])[+-])*</string>
        <key>captures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>(?=.)</string>
                <key>end</key>
                <string>$</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>match</key>
                    <string>(\G(?=[0-9.])(?!0[xXbB]))([0-9](?:[0-9]|((?&lt;=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)?((?:(?&lt;=[0-9])|\.(?=[0-9])))([0-9](?:[0-9]|((?&lt;=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)?((?&lt;!_)([eE])(\+?)(\-?)((?:[0-9](?:[0-9]|(?:(?&lt;=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)))?([fFdDmM](?!\w))?$</string>
                    <key>captures</key>
                    <dict>
                      <key>2</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.decimal.zs</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])_(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>constant.numeric.other.separator.thousands.zs</string>
                          </dict>
                        </array>
                      </dict>
                      <key>3</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.other.separator.thousands.zs</string>
                      </dict>
                      <key>4</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.other.separator.decimals.zs</string>
                      </dict>
                      <key>5</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.decimal.zs</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])_(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>constant.numeric.other.separator.thousands.zs</string>
                          </dict>
                        </array>
                      </dict>
                      <key>6</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.other.separator.thousands.zs</string>
                      </dict>
                      <key>8</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.other.exponent.zs</string>
                      </dict>
                      <key>9</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.operator.arithmetic.zs</string>
                      </dict>
                      <key>10</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.operator.arithmetic.zs</string>
                      </dict>
                      <key>11</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.decimal.zs</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])_(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>constant.numeric.other.separator.thousands.zs</string>
                          </dict>
                        </array>
                      </dict>
                      <key>12</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.other.suffix.zs</string>
                      </dict>
                    </dict>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>(\G0[bB])([01_](?:[01_]|((?&lt;=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)((?:(?:(?:(?:(?:[uU]|[uU]l)|[uU]L)|l[uU]?)|L[uU]?)|[fFdDmM])(?!\w))?$</string>
                    <key>captures</key>
                    <dict>
                      <key>1</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.other.preffix.binary.zs</string>
                      </dict>
                      <key>2</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.binary.zs</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])_(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>constant.numeric.other.separator.thousands.zs</string>
                          </dict>
                        </array>
                      </dict>
                      <key>3</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.other.separator.thousands.zs</string>
                      </dict>
                      <key>4</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.other.suffix.zs</string>
                      </dict>
                    </dict>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>(\G0[xX])([0-9a-fA-F](?:[0-9a-fA-F]|((?&lt;=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)((?:(?:(?:(?:(?:[uU]|[uU]l)|[uU]L)|l[uU]?)|L[uU]?)|[fFdDmM])(?!\w))?$</string>
                    <key>captures</key>
                    <dict>
                      <key>1</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.other.preffix.hex.zs</string>
                      </dict>
                      <key>2</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.hex.zs</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])_(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>constant.numeric.other.separator.thousands.zs</string>
                          </dict>
                        </array>
                      </dict>
                      <key>3</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.other.separator.thousands.zs</string>
                      </dict>
                      <key>4</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.other.suffix.zs</string>
                      </dict>
                    </dict>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>(\G(?=[0-9.])(?!0[xXbB]))([0-9](?:[0-9]|((?&lt;=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)((?&lt;!_)([eE])(\+?)(\-?)((?:[0-9](?:[0-9]|(?:(?&lt;=[0-9a-fA-F])_(?=[0-9a-fA-F])))*)))?((?:(?:(?:(?:(?:[uU]|[uU]l)|[uU]L)|l[uU]?)|L[uU]?)|[fFdDmM])(?!\w))?$</string>
                    <key>captures</key>
                    <dict>
                      <key>2</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.decimal.zs</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])_(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>constant.numeric.other.separator.thousands.zs</string>
                          </dict>
                        </array>
                      </dict>
                      <key>3</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.other.separator.thousands.zs</string>
                      </dict>
                      <key>5</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.other.exponent.zs</string>
                      </dict>
                      <key>6</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.operator.arithmetic.zs</string>
                      </dict>
                      <key>7</key>
                      <dict>
                        <key>name</key>
                        <string>keyword.operator.arithmetic.zs</string>
                      </dict>
                      <key>8</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.decimal.zs</string>
                        <key>patterns</key>
                        <array>
                          <dict>
                            <key>match</key>
                            <string>(?&lt;=[0-9a-fA-F])_(?=[0-9a-fA-F])</string>
                            <key>name</key>
                            <string>constant.numeric.other.separator.thousands.zs</string>
                          </dict>
                        </array>
                      </dict>
                      <key>9</key>
                      <dict>
                        <key>name</key>
                        <string>constant.numeric.other.suffix.zs</string>
                      </dict>
                    </dict>
                  </dict>
                  <dict>
                    <key>match</key>
                    <string>(?:(?:[0-9a-zA-Z_\.]|_)|(?&lt;=[eE])[+-])+</string>
                    <key>name</key>
                    <string>invalid.illegal.constant.numeric.zs</string>
                  </dict>
                </array>
              </dict>
            </array>
          </dict>
        </dict>
      </dict>
      <key>string</key>
      <dict>
        <key>name</key>
        <string>string.quoted.double.zs</string>
        <key>begin</key>
        <string>"</string>
        <key>end</key>
        <string>"</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.character.escape.zs</string>
            <key>match</key>
            <string>\\.</string>
          </dict>
        </array>
      </dict>
      <key>character</key>
      <dict>
        <key>name</key>
        <string>string.quoted.single.zs</string>
        <key>begin</key>
        <string>'</string>
        <key>end</key>
        <string>'</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.character.escape.zs</string>
            <key>match</key>
            <string>\\.</string>
          </dict>
        </array>
      </dict>
      <key>nullptr</key>
      <dict>
        <key>name</key>
        <string>constant.language.nullptr.zs</string>
        <key>match</key>
        <string>\b(nullptr)\b</string>
      </dict>
      <key>literals</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#numeric</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#character</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#nullptr</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#boolean</string>
          </dict>
        </array>
      </dict>
    </dict>
    <key>scopeName</key>
    <string>source.zs</string>
  </dict>
</plist>